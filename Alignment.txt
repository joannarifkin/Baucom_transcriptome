#Aligning with STAR 2-pass

	#STAR 2-pass first aligns all samples to collect a database of splice junctions, then repeats the alignment with the complete list of splice junctions as priors. There are two SLURM demo scripts here
	
	#First, make sure your genome is indexed (see Indexing)
	
	#Star_pass_1_array.sh collects a list of .fastq.gz files (the expression as written calls 5 files)
	
		#You have three options for version. Adding 

				module load Bioinformatics
				module load Bioinformatics  gcc/10.3.0-k2osx5y
				module load star/2.7.6a-aekjdpr
				
		#will call the STAR version installed on Great Lakes for general use. Or you can install a newer version and add it to your path.
		
				module use /nfs/turbo/rsbaucom/lab/Lmod
				module load STAR_module
		
		#will call version 2.7.10a, installed in the Baucom lab turbo storage for lab use.
		
		#Or you can install a newer version and add it to your path.
		
		#To run the first pass, use an adaptation of Star_pass_1_array.sh. Submit the script with "sbatch Star_pass_1_array.sh" (or similar). Pay attention to memory and time limits - alignment is a memory-intensive process. If you're getting out-of-memory errors, slowly increase the --mem-per-CPU allocation.
		
	#Collect_splice_jxns.sh will filter and collect the splice junctions from Pass 1. It is a simple bash script rather than a slurm script, because it is small and resource-light enough that queueing it isn't necessary. You could adapt it into a slurm script if you wanted to. To run it, make it executable and run "bash Collect_splice_jxns.sh" on your own executable version with the correct file locations. 
	
		#Splice junctions do not need to be concatenated - it's just easier to concatenate them first. But you can also supply all the individual splice junction files. Splice junction filtering is optional. 
	
	#Star_pass_2_array.sh is similar to pass 1 except ... it's pass 2. It includes a link to the splice junctions generated in pass 1 and outputs sorted rather than unsorted .bam files. 
	
	
	
	
	